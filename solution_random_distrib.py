from src.classes.chip import Chip
from src.algorithms import random_algo as ra
import os
from sys import argv
import matplotlib.pyplot as plt

# BASE_DIR = os.path.dirname(__file__)
# os.chdir(BASE_DIR)

OUTPUT_FOLDER = "output"

base_data_path = r"data/"
chip_id = 1
net_id = 4

if len(argv) >= 2:
    chip_id = argv[1]

if len(argv) == 3:
    net_id = argv[2]


iterations = 100
total_costs = []

for i in range(iterations):
    print(i)
    chip = Chip(base_data_path, chip_id=chip_id, net_id=net_id, output_folder=OUTPUT_FOLDER)
    algorithm = ra.Random_random(chip, max_offset=30, allow_short_circuit=True, sort_wires=True, random_seed=i)
    algorithm.run()
    cost = chip.calc_total_grid_cost()
    total_costs.append(cost)

print(total_costs)
# total_costs = [3388, 968, 3686, 956, 1854, 3372, 1858, 3388, 3700, 2784, 7912, 4896, 1264, 4902, 1546, 934, 2760, 7616, 2482, 1560, 3694, 952, 4286, 1846, 2466, 3682, 4596, 2172, 2464, 6402, 3680, 5488, 1564, 8832, 3380, 1550, 1250, 3380, 3070, 7034, 2782, 1266, 7016, 4590, 2772, 2480, 3990, 944, 5790, 6388, 942, 5492, 4594, 4012, 3988, 5490, 7316, 332, 3674, 960, 4868, 5494, 4588, 6718, 3400, 2188, 3370, 2774, 2508, 1864, 3070, 3686, 3066, 5482, 8224, 2460, 2782, 2174, 3074, 642, 1564, 2480, 5498, 3382, 1560, 944, 2464, 4294, 4598, 4884, 2172, 1862, 2472, 2454, 7004, 5814, 2158, 1872, 6416, 3088, 4586, 3682, 4584, 1572, 2482, 1566, 1258, 3080, 6706, 1256, 1870, 2474, 3978, 1854, 3086, 2802, 3986, 5800, 2474, 2174, 1564, 3978, 4296, 3994, 3070, 3702, 2464, 3380, 2776, 1860, 2182, 3376, 3380, 2188, 2770, 5184, 4586, 3082, 2764, 1860, 6422, 6110, 2170, 5520, 942, 1562, 3674, 4598, 2172, 944, 3078, 2164, 3672, 3980, 2764, 3068, 3384, 3392, 1864, 1864, 1232, 1862, 4282, 1562, 1252, 4894, 1870, 3374, 1256, 1572, 5500, 7932, 3978, 2474, 3078, 1862, 5200, 4892, 3676, 3070, 2468, 3696, 3390, 2766, 1864, 3998, 3386, 2762, 628, 636, 1860, 2466, 4594, 3994, 4590, 660, 6710, 2158, 2464, 1252, 1262, 1242, 5514, 4592, 3396, 2466, 3680, 5200, 940, 6716, 3698, 3684, 2164, 7018, 1554, 3380, 7024, 2468, 3364, 1232, 5804, 962, 1566, 4892, 5494, 2146, 1552, 1868, 4282, 6106, 3704, 1560, 3984, 4598, 4886, 3362, 3066, 3394, 3070, 4598, 6402, 3366, 5192, 4906, 2478, 2148, 2784, 980, 3104, 332, 7332, 1860, 1874, 4608, 7622, 2780, 1846, 2474, 2478, 7316, 1246, 2790, 972, 1866, 1558, 3380, 4288, 3088, 4284, 4590, 4300, 1554, 648, 2188, 6724, 1274, 2772, 6112, 2466, 4304, 3694, 634, 3382, 3678, 9146, 4300, 7926, 4588, 1864, 4566, 1858, 2782, 322, 1868, 1246, 2792, 7010, 5206, 320, 2766, 7016, 2776, 4006, 1262, 1884, 2770, 2164, 1862, 6704, 5504, 4598, 3392, 2176, 4914, 3380, 4896, 8828, 1260, 3992, 4912, 1566, 2778, 2776, 3082, 1868, 7636, 3992, 6104, 3960, 646, 628, 5184, 1888, 5174, 4890, 3078, 2464, 3084, 956, 6106, 352, 3992, 2764, 1566, 4906, 1250, 3978, 2766, 1560, 4894, 2490, 4598, 4292, 3074, 6094, 3064, 1274, 3386, 4284, 3376, 3690, 3070, 4584, 3394, 5800, 3710, 2786, 5506, 2474, 6710, 322, 4892, 2768, 1862, 1848, 3368, 6122, 3076, 1550, 2162, 2446, 2770, 5792, 1858, 2484, 4906, 3058, 3084, 5186, 2772, 3394, 2178, 3068, 4878, 3388, 2466, 3676, 6108, 3062, 2776, 2766, 1258, 1866, 1858, 938, 5198, 5196, 3088, 2464, 2458, 2476, 2170, 28, 4010, 3988, 1558, 6100, 4290, 2156, 4582, 3070, 4898, 1852, 1234, 4282, 4286, 3386, 3996, 4274, 3692, 7630, 2464, 5198, 1246, 2150, 2788, 3680, 7320, 2474, 1578, 7608, 2782, 1248, 2160, 960, 2792, 1870, 1562, 1862, 1552, 1572, 2162, 2150, 1882, 952, 3980, 4912, 2472, 2474, 1554, 3368, 2776, 4882, 1258, 7022, 2172, 6120, 2782, 2166, 2464, 3686, 942, 942, 3366, 4906, 7010, 1568, 3684, 956, 3396, 2488, 4598, 7320, 3992, 2470, 2170, 2168, 4278, 3978, 2780, 5186, 1558, 5800, 2154, 950, 9118, 6412, 3682, 1550, 1552, 1570, 3378, 3078, 2774, 5794, 1238, 956, 2792, 5198, 1858, 1850, 3992, 5198, 2472, 3664, 3992, 2764, 2468, 3364, 3382, 4286, 5198, 1558, 1556, 3382, 5504, 7306, 4890, 5184, 2762, 3976, 4290, 2164, 1548, 5512, 2782, 954, 2168, 3986, 1862, 26, 1866, 1558, 4902, 962, 4884, 3972, 2468, 6086, 636, 7032, 6108, 9442, 3394, 5190, 4880, 4592, 3676, 2776, 3080, 2772, 6398, 648, 3062, 2792, 2786, 1562, 5794, 6702, 6416, 5506, 1542, 4310, 1254, 3974, 664, 5494, 1264, 1866, 2474, 7618, 1546, 4896, 3676, 5790, 5796, 7312, 3982, 1264, 9430, 6394, 3084, 3064, 3070, 2188, 3980, 1238, 3378, 3984, 1568, 4600, 4894, 2174, 3076, 1262, 5490, 3978, 2788, 3680, 636, 1888, 1858, 6108, 3062, 3998, 2452, 2482, 2782, 3074, 5190, 3394, 4288, 1864, 2766, 3686, 4278, 2468, 4596, 5494, 4890, 1546, 4592, 3976, 4274, 1866, 4288, 4286, 2780, 2776, 4580, 3678, 976, 2154, 7304, 3094, 4312, 4594, 1866, 3692, 1874, 2772, 652, 2170, 3666, 5494, 1882, 3696, 632, 2154, 1870, 3394, 1260, 2784, 3680, 5792, 2168, 1566, 948, 946, 2482, 1848, 5818, 3082, 2176, 4924, 1886, 3984, 1240, 5792, 4292, 2164, 1566, 3662, 2192, 2782, 5202, 2758, 1880, 5804, 3972, 3082, 6704, 2156, 6094, 2166, 2784, 2466, 6414, 3094, 3370, 7308, 2482, 1558, 5192, 3990, 3064, 338, 1858, 342, 4282, 1256, 4292, 940, 660, 8216, 3992, 3698, 2162, 3680, 3992, 324, 2466, 4584, 1550, 2156, 3386, 4296, 5788, 5808, 3066, 2152, 3680, 5200, 2174, 2780, 3104, 4886, 5198, 1864, 4898, 3082, 5800, 4586, 2156, 2166, 1232, 1556, 6704, 4590, 946, 2464, 7008, 3994, 6414, 3382, 3704, 3370, 4596, 5182, 6408, 4890, 3402, 1568, 3982, 6090, 4582, 3696, 3078, 346, 7016, 3380, 7032, 1852, 1850, 3366, 5200, 4580, 6404, 2788, 2770, 1884, 5212, 2456, 0, 3688, 638, 2770, 2470, 4900, 4886, 3990, 3074, 3082, 1546, 6714, 1546, 5186, 2780, 2172, 4294, 5498, 4284, 1858, 3992, 1248, 3702, 2166, 2158, 4888, 954, 1872, 3988, 3062, 1558, 7016, 4584, 1254, 2774, 5510, 7920, 1556, 3682, 3088, 3986, 1544, 630, 650, 1262, 7018, 6400, 3080, 2476, 1860, 2168, 2788, 4010, 2174, 3370, 1864, 1862, 946, 3686, 2804, 2158, 3370, 3688, 964, 34, 3978, 3070, 3368]
plt.title(f"Cost Histogram Random Algorithm (Chip {chip_id}, Net {net_id})")
plt.hist(total_costs, color='blue', bins=30)
plt.xlabel("Cost")
plt.ylabel("Frequency")

distrib_path = os.path.join(OUTPUT_FOLDER, "distributions")
save_name = f"cost_distrib_random_chip_{chip_id}_net{net_id}"
save_path = os.path.join(distrib_path, save_name)
plt.savefig(save_path)

